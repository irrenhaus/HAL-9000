/* Generated by CodeScroll Test Monitor Program Analyzer */

#ifndef CSTM_MONITOR_CONFIG_HEADER_PATH
#include "cstm_monitor_config.h"
#else
#include CSTM_MONITOR_CONFIG_HEADER_PATH
#endif
#ifndef CSTM_TARGET_HEADER_PATH
#include "cstm_target.h"
#else
#include CSTM_TARGET_HEADER_PATH
#endif
#ifndef CSTM_PROBE_HEADER_PATH
#include "cstm_probe.h"
#else
#include CSTM_PROBE_HEADER_PATH
#endif
#ifndef CSTM_TM_PROBE_MACRO_HEADER_PATH
#include "codescroll_TM_probe_macro.h"
#else
#include CSTM_TM_PROBE_MACRO_HEADER_PATH
#endif
#ifndef CSTM_TM_HEADER_HEADER_PATH
#include "codescroll_TM_header.h"

#else
#include CSTM_TM_HEADER_HEADER_PATH
#endif

/* Extern declarations of origin of pointer variables */
#if defined CODESCROLL_MCDC_EVALUATION || defined CODESCROLL_MEM_ENABLE
#define CS_MCDC_54_0(C1, C2, n) \
  (C1 ? \
    (C2 ? (CS_CMM_MCDC_CX(n+0) 1) : (CS_CMM_MCDC_CX(n+1) 0)) : (CS_CMM_MCDC_CX(n+2) 0))
#else /* !CODESCROLL_MCDC_EVALUATION && !CODESCROLL_MEM_ENABLE */
#define CS_MCDC_54_0(cs_cmm_C1, cs_cmm_C2, cs_cmm_n)  CS_MCDC_54_0_ORG
#endif /* CODESCROLL_MCDC_EVALUATION || CODESCROLL_MEM_ENABLE */
#if defined CODESCROLL_MCDC_EVALUATION || defined CODESCROLL_MEM_ENABLE
#define CS_MCDC_54_8(C1, C2, n) \
  (C1 ? \
    (C2 ? (CS_CMM_MCDC_CX(n+0) 1) : (CS_CMM_MCDC_CX(n+1) 0)) : (CS_CMM_MCDC_CX(n+2) 0))
#else /* !CODESCROLL_MCDC_EVALUATION && !CODESCROLL_MEM_ENABLE */
#define CS_MCDC_54_8(cs_cmm_C1, cs_cmm_C2, cs_cmm_n)  CS_MCDC_54_8_ORG
#endif /* CODESCROLL_MCDC_EVALUATION || CODESCROLL_MEM_ENABLE */
#if defined CODESCROLL_MCDC_EVALUATION || defined CODESCROLL_MEM_ENABLE
#define CS_MCDC_67_0(C1, C2, n) \
  (C1 ? \
    (C2 ? (CS_CMM_MCDC_CX(n+0) 1) : (CS_CMM_MCDC_CX(n+1) 0)) : (CS_CMM_MCDC_CX(n+2) 0))
#else /* !CODESCROLL_MCDC_EVALUATION && !CODESCROLL_MEM_ENABLE */
#define CS_MCDC_67_0(cs_cmm_C1, cs_cmm_C2, cs_cmm_n)  CS_MCDC_67_0_ORG
#endif /* CODESCROLL_MCDC_EVALUATION || CODESCROLL_MEM_ENABLE */
/* End of extern declarations of origins */

#define CS_MCDC_54_0_ORG	 ((CANx->MSR & ((uint32_t)0x00000001)) != ((uint32_t)0x00000001)) && (wait_ack != ((uint32_t)0x0000FFFF))
#define CS_MCDC_54_8_ORG	 ((CANx->MSR & ((uint32_t)0x00000001)) == ((uint32_t)0x00000001)) && (wait_ack != ((uint32_t)0x0000FFFF))
#define CS_MCDC_67_0_ORG	 ((CANx->MSR & ((uint16_t)0x0002)) == ((uint16_t)0x0002))&&(wait_slak!=0x00)
